# The Builder container is responsible for writting args (Jenkins credentials)
# to the appropriate files (.kube/config, .ssh/id_rsa, etc.)
FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=nonintercative

# Install Python3
RUN apt-get -y update ; \
apt-get install -y apt-utils software-properties-common
RUN apt-get install -y python3 && ln -sf python3 /usr/bin/python
RUN apt-get update ; apt-get install -y git curl gradle wget tar unzip gzip python3-pip
RUN pip3 install docker gitpython

# Install Kubectl
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

# Install Docker
RUN apt-get install -y \
  ca-certificates \
  gnupg \
  lsb-release
RUN \
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - ; \
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable" ; \
apt-get update -y; \
apt-get install -y docker-ce docker-ce-cli containerd.io
RUN chmod u+x kubectl && mv kubectl /bin/kubectl

# Setting working directory
RUN mkdir /root/.ssh;mkdir /cicd;mkdir /app # TODO: is this necessary?
WORKDIR /app

# Install Helm
RUN wget https://get.helm.sh/helm-v3.6.2-linux-amd64.tar.gz
RUN tar -xvf ./helm-v3.6.2-linux-amd64.tar.gz
RUN ln -s /app/linux-amd64/helm /usr/bin/helm3

COPY root /root/

#RUN ln -s /root/.nvm/versions/node/v16.13.2/bin/node /usr/bin/node ;\
#ln -s /root/.nvm/versions/node/v16.13.2/bin/npm /usr/bin/npm ;

#ENV HELM_HOME=/root/.helm
#RUN chmod 400 /root/.ssh/id_rsa

#RUN git config --global user.email "mustafa.hakimi@outlook.dk";\
#    git config --global user.name "HakimiX"

WORKDIR /root/scripts
ENTRYPOINT ["sh", "entrypoint.sh"]
